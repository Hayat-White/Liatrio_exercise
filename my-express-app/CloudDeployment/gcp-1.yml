---
- name: Create an instance
  hosts: localhost
  gather_facts: no
  vars:
      gcp_project: single-cistern-433009-c1
      gcp_cred_kind: serviceaccount
      gcp_cred_file: /app/single-cistern-433009-c1-571c4267abf4.json
      zone: "us-central1-b"
      region: "us-central1"

  tasks:
    - name: create a instance
      gcp_compute_instance:
          state: present
          name: test-vm
          machine_type: e2-micro
          metadata:
            ssh-keys: "hayatwhitecomp:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCqkTFasEPzw7Jywdu8yejFfwMnFTEZ4vzJjC5/OLZik+V3BmXZJINwTUFV7HJEQBO3UIObxqQYsq8Ca1ZVn4kBtry/jlitYTiLSY0/xaQhiPWxG0Sh9uyWYC9ZyIZQSqxBkefOvaMZiilNmCr+VkM+87RG5D74fmTKQHO18G/qvLc+s2qXAFIfYD6jl9bdYdKizhMVFZ5rPikKuxPfXyvKPTB0C2qZNH5QrFvuHcGBF1XxwpLMF06KGcUwSD6o0SXJT8yqBF8wNmBno5PQHlAtKh5jhoVhklbFWlJqa5uxJwnaVHmMTddcS22j/rKzjpLcP9jb7TmtbTEkFxFTYV8NvBNhh+d7KZ8N4K2NE67/1ImiY5MhRRz9x8cW7RdKDv65/Ep8EZRWE75inuyG5BbLzE+u6/IHwLG77MhA2G2smJK5sieJk2ZwL5bHfN6avr+bccr5T/zJ8x8BOz39+76gNwNWrJjgVJk3GTp72CzZkaxVISQlnJW3PeBhyavymtgHDM9+PH8VJBMuhloNsmYc/dsSu+BxedevVp6lZF0p++GOqUgaCPIjwbCwGT1Ciijcz5/ktv4ERNinCqOjJjbv/8gcdnCi/wwuL2sq5ZsgpciuZZjshyZhfns1I+PoXoTdy+2C8gA4oijqTp5zNMBsH/h93XChJ80g/+0gvE0vzw== root@1079de108b03"
          disks:
            - auto_delete: true
              device_name: test-vm-disk-device
              boot: true
              initialize_params:
                disk_name: test-vm-disk
                disk_type: pd-standard
                disk_size_gb: 10
                source_image: projects/ubuntu-os-cloud/global/images/ubuntu-2204-jammy-v20240904
          network_interfaces:
              - network: null # use default
                access_configs:
                  - name: 'External NAT'
                    network_tier: 'STANDARD'
                    type: 'ONE_TO_ONE_NAT'
          zone: "{{ zone }}"
          project: "{{ gcp_project }}"
          auth_kind: "{{ gcp_cred_kind }}"
          service_account_file: "{{ gcp_cred_file }}"
          tags:
            items:
              - http-server
              - https-server
          scopes:
            - https://www.googleapis.com/auth/compute
      register: instance

    # - name: Wait for SSH to come up
    #   wait_for: host={{ instance.networkInterfaces[0].accessConfigs[0].natIP }} port=22 delay=10 timeout=60

    - name: Add host to groupname
      add_host: hostname={{ instance.networkInterfaces[0].accessConfigs[0].natIP }} groupname=new_instances

- name: Manage new instances
  hosts: new_instances
  connection: ssh
  gather_facts: no
  become: True
  pre_tasks:
    - name: Create a ssh directory for root
      connection: local
      ansible.builtin.file:
        path: /root/.ssh
        state: directory
        mode: '0755'
    - name: Write the new instance host key to known hosts
      become: yes
      connection: local
      shell: "ssh-keyscan -H {{ inventory_hostname }} >> ~/.ssh/known_hosts"
    - name: Update all packages to the latest version
      become: yes
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 3600
  tasks:
    - name: Install python3.10-venv nodejs npm
      become: yes
      apt:
        name: python3.10-venv, nodejs, npm
        state: present

    - name: Delete existing simple-microservice-example directory
      ansible.builtin.file:
        path: /home/hayatwhitecomp/simple-microservice-example
        state: absent
    #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/git_module.html#examples
    - name: Example clone of a single branch
      ansible.builtin.git:
        repo: https://github.com/CSUChico-CSCI644/simple-microservice-example.git
        dest: /home/hayatwhitecomp/simple-microservice-example
        single_branch: yes
        version: localdeploy
    #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
    - name: Change the permssions and ownership of the simple-microservice-example directory
      ansible.builtin.file:
        path: /home/hayatwhitecomp/simple-microservice-example
        owner: hayatwhitecomp
        group: hayatwhitecomp
        recurse: true
    # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/pip_module.html#parameters
    - name: Install Dependencies for simple-microservice-example
      ansible.builtin.pip:
        requirements: /home/hayatwhitecomp/simple-microservice-example/QuoteService/requirements.txt
        virtualenv: /home/hayatwhitecomp/simple-microservice-example/QuoteService/venv
        virtualenv_command: python3 -m venv
    #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/lineinfile_module.html

- name: Configure the new instances for Redis, Nginx, and MongoDB
  hosts: new_instances
  connection: ssh
  gather_facts: yes
  become: True
  tasks:
    - name: Frontend npm install
      ansible.builtin.shell: npm install
      args:
        chdir: /home/hayatwhitecomp/simple-microservice-example/FrontendApplication/

    - name: Export API_GATEWAY & npm run build
      become: yes
      ansible.builtin.shell: npm run build
      args:
        chdir: /home/hayatwhitecomp/simple-microservice-example/FrontendApplication/
      environment: 
        API_GATEWAY: 'http://{{ inventory_hostname }}'
    
    - name : Copy dist folder
      become: yes
      ansible.builtin.copy:
        src: /home/hayatwhitecomp/simple-microservice-example/FrontendApplication/dist/
        dest: /var/www/html/
        mode: '0755'
        owner: root
        group: root
        remote_src: yes
    - name: Install dependencies
      become: yes
      apt:
        name: lsb-release, curl, gpg, nginx, gnupg
        state: present
        update_cache: yes
        cache_valid_time: 3600
    - name: Add Redis to apt source
      block:
        #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_key_module.html#examples
        - name: Add Redis Key
          ansible.builtin.get_url:
            url: https://packages.redis.io/gpg
            dest: /usr/share/keyrings/redis-archive-keyring.asc
            mode: '0755'
        - name: Add Redis Repository
          ansible.builtin.apt_repository:
            repo: "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.asc] https://packages.redis.io/deb {{ ansible_distribution_release }} main"
            filename: "redis"
            state: present
            update_cache: yes
    - name: Install Redis
      apt:
        name: redis
        state: present

    - name: Start and Enable Redis
      ansible.builtin.service:
        name: redis-server
        state: started
        enabled: yes
    - name: Add MongoDB to apt source
      block:
        #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_key_module.html#examples
        - name: Add Mongo Key
          ansible.builtin.get_url:
            url: https://www.mongodb.org/static/pgp/server-8.0.asc
            dest: /usr/share/keyrings/mongodb-server-8.0.asc
            mode: '0755'
        - name: Add MongoDB Repository
          ansible.builtin.apt_repository:
            repo: "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.asc ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/8.0 multiverse"
            filename: "mongoDB"
            state: present
            update_cache: yes
    - name: Install Mongo
      apt:
        name: mongodb-org
        state: present
    - name: Start and Enable MongoDB
      ansible.builtin.service:
        name: mongod
        state: started
        enabled: yes
    - name: Start mongodb admin-init.js & init-db.js
      ansible.builtin.shell: mongosh < admin-init.js && mongosh < init-db.js
      args:
        chdir: /home/hayatwhitecomp/simple-microservice-example/MongoDB/
    
    - name: Update Main.py for db 
      ansible.builtin.lineinfile:
        path: /home/hayatwhitecomp/simple-microservice-example/QuoteService/main.py
        regexp: "client = MongoClient\\(host='db',"
        line: "    client = MongoClient(host='localhost',"
    - name: Update Main.py for redis
      ansible.builtin.lineinfile:
        path: /home/hayatwhitecomp/simple-microservice-example/QuoteService/main.py
        regexp: "r = redis.Redis\\(host='redis'"
        line: "    r = redis.Redis(host='localhost',"

    - name: Update Quote.service User
      ansible.builtin.lineinfile:
        path: /home/hayatwhitecomp/simple-microservice-example/QuoteService/quote.service
        regexp: "User=bryandixon"
        line: "User=hayatwhitecomp"

    - name: Update Quote.service Working Directory
      ansible.builtin.lineinfile:
        path: /home/hayatwhitecomp/simple-microservice-example/QuoteService/quote.service
        regexp: "WorkingDirectory=/home/bryandixon/simple-microservice-example/QuoteService/"
        line: "WorkingDirectory=/home/hayatwhitecomp/simple-microservice-example/QuoteService/"

    - name: Update quote.service ExecStart 
      ansible.builtin.lineinfile:
        path: /home/hayatwhitecomp/simple-microservice-example/QuoteService/quote.service
        regexp: "ExecStart=/home/bryandixon/simple-microservice-example/QuoteService/venv/bin/python /home/bryandixon/simple-microservice-example/QuoteService/main.py"
        line: "ExecStart=/home/hayatwhitecomp/simple-microservice-example/QuoteService/venv/bin/python /home/hayatwhitecomp/simple-microservice-example/QuoteService/main.py"

    - name: Copy Quote.service
      become: yes
      ansible.builtin.copy:
        src: /home/hayatwhitecomp/simple-microservice-example/QuoteService/quote.service
        dest: /etc/systemd/system/quote.service
        mode: '0755'
        remote_src: yes

    - name: daemon-reload
      become: yes
      ansible.builtin.shell: systemctl daemon-reload
    
    - name: Enable quote.service
      ansible.builtin.systemd:
        name: quote.service
        enabled: yes

    - name: Start quote.service
      ansible.builtin.systemd:
        name: quote.service
        state: started

    - name: API Gateway npm install
      ansible.builtin.shell: npm install
      args:
        chdir: /home/hayatwhitecomp/simple-microservice-example/ApiGateway/

    - name: Update environment variable in apigateway.service
      block:
        - name: Username Update
          ansible.builtin.lineinfile:
            path: /home/hayatwhitecomp/simple-microservice-example/ApiGateway/apigateway.service
            regexp: 'User=bryandixon'
            line: 'User=hayatwhitecomp'
        - name: Update Path
          ansible.builtin.lineinfile:
            path: /home/hayatwhitecomp/simple-microservice-example/ApiGateway/apigateway.service
            regexp: 'WorkingDirectory=/home/bryandixon/simple-microservice-example/ApiGateway/'
            line: 'WorkingDirectory=/home/hayatwhitecomp/simple-microservice-example/ApiGateway/'
        - name: Update Environment line
          ansible.builtin.lineinfile:
            path: /home/hayatwhitecomp/simple-microservice-example/ApiGateway/apigateway.service
            regexp: 'Environment="QUOTES_API=http://35.208.5.221"'
            line: 'Environment="QUOTES_API=http://{{ inventory_hostname }}"'

    - name: Copy apigateway.service
      become: yes
      ansible.builtin.copy:
        src: /home/hayatwhitecomp/simple-microservice-example/ApiGateway/apigateway.service
        dest: /etc/systemd/system/apigateway.service
        mode: '0755'
        remote_src: yes

    - name: daemon-reload
      become: yes
      ansible.builtin.shell: systemctl daemon-reload
    
    - name: Enable ApiGateway.service
      ansible.builtin.systemd:
        name: apigateway.service
        enabled: yes

    - name: Start Gateway
      ansible.builtin.systemd:
        name: apigateway.service
        state: started

    - name: Remove default Nginx Configuration
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Copy VHOST to sites-available
      become: yes
      ansible.builtin.copy:
        src: /home/hayatwhitecomp/simple-microservice-example/FrontendApplication/vhost.conf
        dest: /etc/nginx/sites-available/vhost.conf
        mode: '0755'
        remote_src: yes

    - name: Create a symbolic link to the new Nginx Configuration
      ansible.builtin.file:
        src: /etc/nginx/sites-available/vhost.conf
        dest: /etc/nginx/sites-enabled/default
        state: link

    - name: Restart Nginx
      ansible.builtin.service:
        name: nginx
        state: restarted

    
    #Quoteservice
    
      
    
    # - name: Create MinimalMicroService systemd service
    #   ansible.builtin.template:
    #     src: django.service.j2
    #     dest: /etc/systemd/system/minimalmicroservice.service
    #     owner: root
    #     group: root
    #     mode: '0644'

    # - name: Reload systemd
    #   ansible.builtin.systemd:
    #     daemon_reload: yes

    # - name: Start MinimalMicroService
    #   ansible.builtin.service:
    #     name: minimalmicroservice
    #     state: started
    #     enabled: yes


    # - name: Write the new ec2 instance host key to known hosts
    #   connection: local
    #   shell: "ssh-keyscan -H {{ inventory_hostname }} >> ~/.ssh/known_hosts"

    # - name: System details
    #   debug:
    #     msg: "{{ ansible_facts['lsb']['release'] }}"
